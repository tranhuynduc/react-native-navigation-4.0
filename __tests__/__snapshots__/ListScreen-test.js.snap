// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List Screen should render with given state from Redux store 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "borderRadius": 4,
      "elevation": 1,
      "flex": 1,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0.5,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 0.75,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "paddingVertical": 16,
          },
          undefined,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "System",
                "fontWeight": "500",
                "textAlign": "left",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "fontSize": 20,
                  "letterSpacing": 0.15,
                  "lineHeight": 30,
                  "marginVertical": 2,
                },
                undefined,
              ],
              Array [
                Object {
                  "fontSize": 20,
                  "letterSpacing": 0.15,
                  "lineHeight": 30,
                  "marginVertical": 2,
                },
                undefined,
              ],
            ],
          ]
        }
      >
        List Notes
      </Text>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <RCTScrollView
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </RCTSafeAreaView>
    </View>
  </View>
</View>
`;
